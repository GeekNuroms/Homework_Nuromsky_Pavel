# 5. Создать список, содержащий цены на товары (10–20 товаров), например:
# [57.8, 46.51, 97, ...]
#
# Вывести на экран эти цены через запятую в одну строку,
# цена должна отображаться в виде <r> руб <kk> коп (например «5 руб 04 коп»).
# Подумать, как из цены получить рубли и копейки, как добавить нули, если,
# например, получилось 7 копеек или 0 копеек (должно быть 07 коп или 00 коп).
# Вывести цены, отсортированные по возрастанию, новый список не создавать
# (доказать, что объект списка после сортировки остался тот же).
# Создать новый список, содержащий те же цены, но отсортированные по убыванию.
# Вывести цены пяти самых дорогих товаров.
# Сможете ли вывести цены этих товаров по возрастанию, написав минимум кода?

from random import randint

data_list = [97, 97.7, 97.77]
random_list = [randint(100, 10000)/100 for num in range(18)]
data_list.extend(random_list)
# print(data_list)
price_list = []
for ind, value in enumerate(data_list):
    cost = str(value)
    if cost.isdigit():
        rub, cop = value, '00'
    else:
        cost = cost.split('.')
        rub, cop = cost[0], cost[1]
        if len(cop) == 1:
            cop += '0'
    price = f'{rub} руб {cop} коп'
    print(value, price)
    price_list.append(price)
print(f'ID: {id(price_list)}', ', '.join(price_list))# Подумать, как из цены получить рубли и копейки, как добавить нули, если,
# например, получилось 7 копеек или 0 копеек (должно быть 07 коп или 00 коп).
print(f'ID: {id(data_list)}')
data_list.sort()# Вывести цены, отсортированные по возрастанию, новый список не создавать
print(f'ID: {id(data_list)}\n', data_list)
invert_list = sorted(data_list, reverse=True)# Создать новый список, содержащий те же цены, но отсортированные по убыванию.
print(f'Invert ID:\n{id(invert_list)}\n', invert_list)
print('5 самых дорогих:\n', data_list[-5:])# Вывести цены пяти самых дорогих товаров.